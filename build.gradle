plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	//spring boot
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.json:json:20230227'

	//swagger-ui
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	//mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//query dsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'

	//DB oracle
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

clean {
	delete file(generated)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}